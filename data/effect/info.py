#===============================================================================
# Copyright (C) 2011 Diego Duclos
#
# This file is part of Eos.
#
# Eos is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Eos is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Eos. If not, see <http://www.gnu.org/licenses/>.
#===============================================================================

class EffectInfo:
    """
    The EffectInfo objects are the actual "Core" of eos,
    they are what eventually applies an effect onto a fit.
    Which causes modules to actually do useful(tm) things.
    They are typically generated by the InfoBuild class
    but nothing prevents a user from making some of his own and running them onto a fit
    """
    def __init__(self):
        self.conditions = None
        """
        Describes conditions under which modification is applied.
        Can be None or tree of ConditionAtom objects.
        """

        self.type = None
        """
        Describes type of modification.
        Can have infoDuration, infoPre or infoPost value from consts file.
        """

        self.gang = False
        """
        Flag identifying local/gang change.
        Can be either True or False.
        """

        self.location = None
        """
        Target location to change.
        Can have locSelf, locChar, locShip, locTgt, locOther, locArea or locSpace values from consts file.
        """

        self.filterType = None
        """
        The filterType of the modification.
        Can have filterAll, filterSkill or filterGroup value from consts file.
        """

        self.filterValue = None
        """
        The filter value of the modification.
        For filterAll must be None.
        For filterGroup has some integer, referencing group via ID.
        For filterSkill has some integer, referencing type via ID, or -1 to reference type of carrier.
        """

        self.operation = None
        """
        Which operation should be applied.
        Can have optrPreAssignment, optrPreMul, optrPreDiv, optrModAdd, optrModSub, optrPostMul,
        optrPostDiv, optrPostPercent, optrPostAssignment, optrIncr, optrDecr or optrAssign from
        consts file.
        """

        self.targetAttributeId = None
        """
        Which attribute will be affected by the operation on the target.
        Keeps integer which references attribute via ID.
        """

        self.sourceAttributeId = None
        """
        Which source attribute will be used as modification value for the operation.
        Keeps integer which references attribute via ID.
        """
